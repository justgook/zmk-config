/*
 * some ideas from https://github.com/rastasheep/zmk-config/blob/master/config/corne.keymap
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define HYP LS(LC(LA(LGUI)))
#define HYPER(key) LS(LC(LA(LG(key))))

#define BASE 0
#define MED  1
#define NAV  2
#define LOWER       3
#define RAISE       4

/ {
    behaviors {
        lh_pht: left_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <20 21 22 23>;    // <---[[right-hand keys]]
        };
        rh_pht: right_hand_positional_hold_tap {
            compatible = "zmk,behavior-hold-tap";
            label = "LEFT_POSITIONAL_HOLD_TAP";
            #binding-cells = <2>;
            flavor = "tap-unless-interrupted";
            tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
            quick-tap-ms = <200>;
            bindings = <&kp>, <&kp>;
            hold-trigger-key-positions = <14 15 16 17>;    // <---[[left-hand keys]]
        };

        mo_kp: behavior_mo_kp {
            compatible = "zmk,behavior-hold-tap";
            label = "mo_kp";
            #binding-cells = <2>;
            flavor = "hold-preferred";
            tapping-term-ms = <200>;
            bindings = <&mo>, <&kp>;
        };
    };
        keymap {
                compatible = "zmk,keymap";

// -----------------------------------------------------------------------------------------
// L1 - Tab / Mouse
// L2 - Space / NAV(Navigation)
// L3 - Esc / MED(Media)

// R1 - Ent / Symbols
// R2 - backspace / Numbers
// R3 - Delete / Functions
// HomeRowMod (right hand) - Shift / Cmd / Ctrl / Alt

// |  TAB |  Q  |  W  |  E  |  R  |  T  |     |  Y  |  U  |  I  |  O  |  P  | BKSP |
// | CTRL |  A+ |  S+ |  D+ |  F+ |  G  |     |  H  |  J+ |  K+ |  L+ |  ;+ |  '   |
// | SHFT |  Z  |  X  |  C  |  V  |  B  |     |  N  |  M  |  ,  |  .  |  /  | ESC  |
//                    | L3  | L2  | L1  |     | R1  | R2  | R3  |

base_layer {
    bindings = <
        &kp TAB    &kp Q            &kp W            &kp E           &kp R              &kp T                 &kp Y    &kp U           &kp I               &kp O               &kp P                  &kp BSPC
        &kp LCTRL  &lh_pht LSFT A   &lh_pht LSFT S   &lh_pht LSFT D  &lh_pht LSFT F     &kp G                 &kp H    &rh_pht LSFT A  &rh_pht MOD_RGUI K  &rh_pht MOD_LCTL L  &rh_pht MOD_LALT SEMI  &kp SQT
        &kp LSHFT  &kp Z            &kp X            &kp C           &kp V              &kp B                 &kp N    &kp M           &kp COMMA           &kp DOT             &kp FSLH               &kp ESC
                                                     &mo_kp MED ESC  &mo_kp MED SPACE   &kp TAB               &kp RET  &kp BSPC        &kp DEL
    >;

};

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};

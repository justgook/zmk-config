/*
 * some ideas from https://github.com/rastasheep/zmk-config/blob/master/config/corne.keymap
 * and https://github.com/kkga/zmk-config-Corne-ish-Zen/blob/main/config/corne-ish_zen.keymap
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include "helper.h"


&sk {
  release-after-ms = <STICKY_KEY_TIMEOUT>;
};

&caps_word {
  continue-list = <UNDERSCORE MINUS BACKSPACE N1 N2 N3 N4 N5 N6 N7 N8 N9 N0 KP_N1 KP_N2 KP_N3 KP_N4 KP_N5 KP_N6 KP_N7 KP_N8 KP_N9 KP_N0>;
};


#define HYP LS(LC(LA(LGUI)))
#define HYPER(key) LS(LC(LA(LG(key))))

#define BASE 0
#define NAV  1
#define MED  2
#define LOWER 3
#define RAISE  4


#define LAYER1 1

// thumbs
#define TH1 &mo_tap LAYER1 ESC
#define TH2 &mo_tap LAYER1 SPACE
#define TH3 &mo_tap LAYER1 TAB
#define TH4 &mo_tap LAYER1 RET  
#define TH5 &mo_tap LAYER1 BSPC
#define TH6 &mo_tap LAYER1 DEL


// HomeRowMod (right hand) - Shift / Cmd / Ctrl / Alt
#define HR1(KEY) &am LSFT KEY
#define HR2(KEY) &am LCMD KEY
#define HR3(KEY) &am LCTRL KEY
#define HR4(KEY) &am LALT KEY

/ {
    behaviors {
      am: alpha_mods {
          compatible = "zmk,behavior-hold-tap";
          label = "alpha mods";
          #binding-cells = <2>;
          tapping-term-ms = <240>;
          quick-tap-ms = <180>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&kp>;
          // compatible = "zmk,behavior-hold-tap";
          // label = "POSITIONAL_HOLD_TAP";
          // #binding-cells = <2>;
          // flavor = "tap-unless-interrupted";
          // tapping-term-ms = <100>;                        // <---[[produces tap if held longer than tapping-term-ms]]
          // quick-tap-ms = <200>;
          // bindings = <&kp>, <&kp>;
          // hold-trigger-key-positions = <5 6 7 8 9 10>;    // <---[[right-hand keys]]
      };

      // Easy alt-tab with alt+space thumb using mod-morphs
      spctab: space_tab {
          compatible = "zmk,behavior-mod-morph";
          label = "SPC_TAB";
          #binding-cells = <0>;
          bindings = <&kp SPACE>, <&kp TAB>;
          mods = <MOD_LALT>;
      };

      skq: sticky_key_quick_release {
          compatible = "zmk,behavior-sticky-key";
          label = "STICKY_KEY_QUICK_RELEASE";
          #binding-cells = <1>;
          bindings = <&kp>;
          quick-release;
          release-after-ms = <STICKY_KEY_TIMEOUT>;
      };

      // Use hold-tap to enable rolling sticky keys:
      // https://github.com/zmkfirmware/zmk/issues/829#issuecomment-979864774
      nk: not_so_sticky_key {
          compatible = "zmk,behavior-hold-tap";
          label = "NOT_SO_STICKY_KEY";
          #binding-cells = <2>;
          tapping_term_ms = <240>;
          flavor = "tap-preferred";
          bindings = <&kp>, <&sk>;
      };

      // A hold-tap that activates without delay (like `&mo`)
      mo_tap: mo_with_tap {
          compatible = "zmk,behavior-hold-tap";
          label = "MO_WITH_TAP";
          #binding-cells = <2>;
          tapping_term_ms = <0>;
          retro-tap;
          flavor = "hold-preferred";
          bindings = <&mo>, <&kp>;
      };   
    };
        keymap {
                compatible = "zmk,keymap";
// Keyboard layout
// ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮   ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
// ╰─────────────┴─────────────┴─────────────┼─────────────┼─────────────┼─────────────┤   ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
//                                           ╰─────────────┴─────────────┴─────────────╯   ╰─────────────┴─────────────┴─────────────╯



// -----------------------------------------------------------------------------------------
// L1 - Tab / Mouse
// L2 - Space / NAV(Navigation)
// L3 - Esc / MED(Media)

// R1 - Ent / Symbols
// R2 - backspace / Numbers
// R3 - Delete / Functions
// HomeRowMod (right hand) - Shift / Cmd / Ctrl / Alt


// &to WIN -- SWITCH TO LAYER



base_layer {
    label = "QWR";
    bindings = <
 // ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮      ╭─────────────┬─────────────┬─────────────┬─────────────┬─────────────┬─────────────╮
       &kp TAB         &kp Q        &kp W         &kp E          &kp R         &kp T                &kp Y       &kp U          &kp I         &kp O          &kp P       &kp BSPC
 // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp LCTRL     HR4(A)         HR3(S)        HR2(D)         HR1(F)        &kp G                &kp H         HR1(J)       HR2(K)         HR3(L)      HR4(SEMI)     &kp SQT
 // ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┼─────────────┼─────────────┤
       &kp LSHFT       &kp Z         &kp X        &kp C           &kp V       &kp B                 &kp N        &kp M        &kp COMMA      &kp DOT       &kp FSLH     &kp ESC
 // ╰─────────────┴─────────────┴─────────────┴─────────────┼─────────────┼─────────────┤      ├─────────────┼─────────────┼─────────────┼─────────────┴─────────────┴─────────────╯
                                                    TH1           TH2           TH3                  TH4          TH5            TH6        
 //                                           ╰─────────────┴─────────────┴─────────────╯      ╰─────────────┴─────────────┴─────────────╯ 
    >;
};


// |    |     |     |     |     |    |     | Redo| Paste | Copy | Cut | Undo |    |
// |    | ALT | CTRL| CMD | SFT |    |     |  H  |   ◄   |  ▲   |  ▼  |  ►   |    |
// |    |     |     |     |     |    |     |  N  |   M   |  ,   |  .  |  /   |    |
//                  |     |LAYER|    |     |  ⏎  |   ⌫   |  ⌦   |

nav_layer {
    bindings = <
        &none   &none     &none      &none       &none              &none              &kp Y    &kp U       &kp I       &kp O     &kp P       &kp BSPC
        &none   &kp LALT  &kp LCTRL  &kp LCMD    &kp LSFT           &none              &kp H    &kp LEFT    &kp DOWN    &kp UP    &kp RIGHT   &kp SQT
        &none   &none     &none      &none       &none              &none              &kp N    &kp M       &kp COMMA   &kp DOT   &kp FSLH    &kp ESC
                                     &none       &mo_tap NAV SPACE   &none              &kp RET  &kp BSPC    &kp DEL
    >;
};

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  1  |  2  |  3  |  4  |  5  |   |  6  |  7  |  8  |  9  |  0  | BKSP |
// | BTCLR| BT1 | BT2 | BT3 | BT4 | BT5 |   | LFT | DWN |  UP | RGT |     |      |
// | SHFT |     |     |     |     |     |   |     |     |     |     |     |      |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp TAB    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7   &kp N8 &kp N9    &kp N0 &kp BSPC
   &bt BT_CLR &bt BT_SEL 0 &bt BT_SEL 1 &bt BT_SEL 2 &bt BT_SEL 3 &bt BT_SEL 4   &kp LEFT &kp DOWN &kp UP &kp RIGHT &trans &trans
   &kp LSHFT  &trans       &trans       &trans       &trans       &trans         &trans   &trans   &trans &trans    &trans &trans
                          	        &kp LGUI     &trans       &kp SPACE      &kp RET  &trans   &kp RALT
                        >;
                };

                raise_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                    	     &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
